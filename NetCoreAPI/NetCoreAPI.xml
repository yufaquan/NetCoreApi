<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetCoreAPI</name>
    </assembly>
    <members>
        <member name="T:NetCoreAPI.AuthHelp.ManageVerifyAttribute">
            <summary>
            该过虑器提供给所有对外的RestApi接口使用
            在有需要验证每个接口/方法是否只为管理人员用户调用时使用
            方法级别的过率器
            </summary>
        </member>
        <member name="M:NetCoreAPI.AuthHelp.ManageVerifyAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            方法执行前
            判断用户是否为管理角色，不是则抛出异常
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:NetCoreAPI.AuthHelp.ManageVerifyAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            方法执行后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:NetCoreAPI.AuthHelp.ManageVerifyAttribute.IsHaveVisitToken(System.String,System.Type)">
            <summary>
            判断是否需要访问令牌
            </summary>
            <param name="actionName"></param>
            <param name="t"></param>
            <returns>true：需要；</returns>
        </member>
        <member name="M:NetCoreAPI.AuthHelp.ManageVerifyAttribute.IsHaveAuthorize(System.String,System.Type,System.String@)">
            <summary>
            判断是否有权限
            </summary>
            <param name="actionname">方法名</param>
            <param name="t">Controller类型</param>
            <param name="errorMessage">Controller类型</param>
            <returns>true：有权限；</returns>
        </member>
        <member name="T:NetCoreAPI.ExceptionActionFilter">
            <summary>
            全局异常处理
            </summary>
        </member>
        <member name="M:NetCoreAPI.ExceptionActionFilter.WriteLog(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            写入日志
            </summary>
            <param name="context">提供使用</param>
        </member>
        <member name="T:NetCoreAPI.NoAuthorizeException">
            <summary>
            没有被授权的异常
            </summary>
        </member>
        <member name="T:NetCoreAPI.UserFriendlyException">
            <summary>
            用户友好异常
            </summary>
        </member>
        <member name="T:NetCoreAPI.Controllers.WeatherForecastController">
            <summary>
            天气测试模块
            </summary>
        </member>
        <member name="M:NetCoreAPI.Controllers.WeatherForecastController.Get(System.Int32)">
            <summary>
            测试天气
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreAPI.Controllers.WeatherForecastController.GetJWT">
            <summary>
            获取访问token
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCoreAPI.Controllers.WeatherForecast">
            <summary>
            天气
            </summary>
        </member>
        <member name="P:NetCoreAPI.Controllers.WeatherForecast.Date">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:NetCoreAPI.Controllers.WeatherForecast.TemperatureC">
            <summary>
            aa
            </summary>
        </member>
        <member name="P:NetCoreAPI.Controllers.WeatherForecast.Summary">
            <summary>
            天气
            </summary>
        </member>
    </members>
</doc>
